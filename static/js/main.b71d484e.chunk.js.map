{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","changeMode","forhtml","defaultProps","TextForm","useState","Text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","disabled","length","textChange","toUpperCase","showAlert","toLowerCase","words","split","i","charAt","slice","join","copy","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","rmSpace","replace","filter","element","Alert","height","alert","role","word","str","Capitalize","msg","App","setMode","setAlert","message","setTimeout","home","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gKAIaA,EAAS,SAACC,GACnB,OACI,8BACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACI,sBAAKD,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACI,sBAAMJ,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACI,oBAAIL,UAAU,kCAAd,SACI,oBAAIA,UAAU,WAAd,SACI,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAIR,sBAAKF,UAAS,sCAAgD,UAAfD,EAAME,KAAmB,OAAS,SAAjF,UACI,uBAAOD,UAAU,mBAAmBI,KAAK,WAAWC,GAAG,MAAMC,QAASP,EAAMQ,aAC5E,uBAAOP,UAAU,mBAAmBQ,QAAQ,MAA5C,SAAkE,UAAfT,EAAME,KAAmB,mBAAqB,oCAgB7HH,EAAOW,aAAe,CAClBN,MAAO,UCrCJ,IAAMO,EAAW,SAACX,GAErB,IA0DA,EAAwBY,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,qCACI,gCAEI,sBAAKb,UAAU,OAAOc,MAAO,CAAEC,MAAsB,SAAfhB,EAAME,KAAkB,QAAU,SAAxE,UACI,oBAAID,UAAU,OAAd,SAAsBD,EAAMiB,UAC5B,0BAAUX,GAAG,MAAOL,UAAU,eAAeiB,MAAOL,EAAMM,SAZnD,SAACC,GAEpBN,EAAQM,EAAMC,OAAOH,QAU2EI,KAAK,KAAKP,MAAO,CAAEQ,gBAAgC,SAAfvB,EAAME,KAAkB,UAAY,QAASc,MAAsB,SAAfhB,EAAME,KAAkB,QAAU,cAElN,wBAAQsB,SAA0B,IAAhBX,EAAKY,OAAcpB,KAAK,UAAUE,QAnE1C,WAElB,IAAImB,EAAab,EAAKc,cACtBb,EAAQY,GACR1B,EAAM4B,UAAU,4BAA6B,YA+DuC3B,UAAS,kBAA4B,UAAfD,EAAME,KAAmB,OAAS,QAA/C,cAArF,mCACA,wBAAQsB,SAA0B,IAAhBX,EAAKY,OAAcpB,KAAK,UAAUE,QA5D1C,WAElB,IAAImB,EAAab,EAAKgB,cACtBf,EAAQY,GACR1B,EAAM4B,UAAU,4BAA6B,YAwDuC3B,UAAS,kBAA4B,UAAfD,EAAME,KAAmB,OAAS,QAA/C,cAArF,mCACA,wBAAQsB,SAA0B,IAAhBX,EAAKY,OAAcxB,UAAS,kBAA4B,UAAfD,EAAME,KAAmB,OAAS,QAA/C,cAAoEK,QA/CtG,WAGpB,IADA,IAAMuB,EAAQjB,EAAKgB,cAAcE,MAAM,KAC9BC,EAAI,EAAGA,EAAIF,EAAML,OAAQO,IAC9BF,EAAME,GAAKF,EAAME,GAAGC,OAAO,GAAGN,cAAgBG,EAAME,GAAGE,MAAM,GAGjE,MAAO,CAACpB,EAAQgB,EAAMK,KAAK,MAC3BnC,EAAM4B,UAAU,4BAA6B,aAuCrC,uBACA,wBAAQJ,SAA0B,IAAhBX,EAAKY,OAAcxB,UAAS,kBAA4B,UAAfD,EAAME,KAAmB,OAAS,QAA/C,cAAoEK,QAnC3G,WAEf,IAAI6B,EAAOC,SAASC,eAAe,OACnCF,EAAKG,SACLC,UAAUC,UAAUC,UAAUN,EAAKlB,OACnCmB,SAASM,eAAeC,kBACxB5C,EAAM4B,UAAU,eAAgB,YA6BxB,wBACA,wBAAQJ,SAA0B,IAAhBX,EAAKY,OAAcxB,UAAS,kBAA4B,UAAfD,EAAME,KAAmB,OAAS,QAA/C,cAAoEK,QA1BpG,WACtB,IAAIsC,EAAUhC,EAAKiC,QAAQ,OAAQ,KACnChC,EAAQ+B,GACR7C,EAAM4B,UAAU,gCAAiC,YAuBzC,gCACA,wBAAQJ,SAA0B,IAAhBX,EAAKY,OAAcxB,UAAS,kBAA4B,UAAfD,EAAME,KAAmB,OAAS,QAA/C,cAAoEK,QAvD1G,WAEhBO,EADc,IAEdd,EAAM4B,UAAU,eAAgB,YAoDxB,2BAGJ,sBAAK3B,UAAU,iBAAiBc,MAAO,CAAEC,MAAsB,SAAfhB,EAAME,KAAkB,QAAU,SAAlF,UACI,yCACA,8BAAIW,EAAKkB,MAAM,KAAKgB,QAAO,SAACC,GAAc,OAA0B,IAAnBA,EAAQvB,UAAgBA,OAAzE,IAAiF,iDAAjF,OACA,8BAAIZ,EAAKiC,QAAQ,OAAQ,IAAIrB,OAA7B,IAAqC,yDACrC,8BAAI,KAAQZ,EAAKkB,MAAM,KAAKgB,QAAO,SAACC,GAAc,OAA0B,IAAnBA,EAAQvB,UAAgBA,OAAjF,IAAyF,iDAAzF,OACA,yCACA,4BAAIZ,EAAKY,OAAS,EAAIZ,EAAO,8BCnFhCoC,EAAQ,SAACjD,GASlB,OACI,qBAAKe,MAAO,CAACmC,OAAO,QAApB,SACKlD,EAAMmD,OAAS,sBAAKlD,UAAS,sBAAiBD,EAAMmD,MAAM9C,KAA7B,gCAAiE+C,KAAK,QAApF,UACZ,iCAVK,SAACC,GAEd,IAAIC,EAAKD,EAAKxB,cACd,OAAOyB,EAAIrB,OAAO,GAAGN,cAAe2B,EAAIpB,MAAM,GAO7BqB,CAAWvD,EAAMmD,MAAM9C,QADpB,IACqCL,EAAMmD,MAAMK,IAC7D,wBAAQnD,KAAK,SAASJ,UAAU,YAAY,kBAAgB,QAAQ,aAAW,gBCmChFwD,MA3Cf,WACE,MAAwB7C,mBAAS,SAAjC,mBAAOV,EAAP,KAAawD,EAAb,KACA,EAA0B9C,mBAAS,MAAnC,mBAAOuC,EAAP,KAAcQ,EAAd,KAEM/B,EAAY,SAACgC,EAASvD,GAC1BsD,EACE,CACEH,IAAKI,EACLvD,KAAMA,IAGVwD,YAAW,WACTF,EAAS,QACR,OAiBL,OACE,qCACE,cAAC,EAAD,CAAQvD,MAAM,YAAY0D,KAAK,OAAO5D,KAAMA,EAAMM,WAhBnC,WACJ,UAATN,GACFwD,EAAQ,QACRrB,SAAS0B,KAAKhD,MAAMQ,gBAAkB,QACtCK,EAAU,6BAA6B,aAIvC8B,EAAQ,SACRrB,SAAS0B,KAAKhD,MAAMQ,gBAAkB,QACtCK,EAAU,8BAA8B,aAMkCuB,MAAOA,EAAOvB,UAAWA,IACnG,cAAC,EAAD,CAAOuB,MAAOA,EAAOvB,UAAWA,IAChC,qBAAK3B,UAAU,iBAAf,SAEE,cAAC,EAAD,CAAUgB,QAAQ,iGAAiGf,KAAMA,EAAMiD,MAAOA,EAAOvB,UAAWA,UC/BjJoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASC,eAAe,SAE1B0B,M","file":"static/js/main.b71d484e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const Navbar = (props) => {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                            </li>\r\n                           \r\n                        </ul>\r\n                        <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}  >\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"box\" onClick={props.changeMode} />\r\n                            <label className=\"form-check-label\" forhtml=\"box\">{props.mode === \"light\" ? \"Enable Dark Mode\" : \"Enable Light Mode\"}</label>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"My app\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\n\r\nexport const TextForm = (props) => {\r\n\r\n    const handleonClick = () => {\r\n        // console.log(\"clicked\");\r\n        let textChange = Text.toUpperCase();\r\n        setText(textChange);\r\n        props.showAlert(\"Converted into Upper Case\", \"success\");\r\n\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        // console.log(\"clicked\");\r\n        let textChange = Text.toLowerCase();\r\n        setText(textChange);\r\n        props.showAlert(\"Converted into Lower Case\", \"success\");\r\n\r\n    }\r\n\r\n\r\n    const handleClear = () => {\r\n        let changes = \"\";\r\n        setText(changes);\r\n        props.showAlert(\"Text Cleared\", \"success\")\r\n    }\r\n    const handleTitleCase = () => {\r\n\r\n        const words = Text.toLowerCase().split(\" \");\r\n        for (let i = 0; i < words.length; i++) {\r\n            words[i] = words[i].charAt(0).toUpperCase() + words[i].slice(1);\r\n\r\n        }\r\n        return [setText(words.join(' ')),\r\n        props.showAlert(\"Converted into Title Case\", \"success\")]\r\n\r\n    }\r\n\r\n\r\n    const handleCopy = () => {\r\n\r\n        let copy = document.getElementById(\"Box\")\r\n        copy.select();\r\n        navigator.clipboard.writeText(copy.value)\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Text Copied!\", \"success\")\r\n\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let rmSpace = Text.replace(/\\s+/g, \" \")\r\n        setText(rmSpace);\r\n        props.showAlert(\"Extra Spaces has been removed\", \"success\")\r\n\r\n    }\r\n\r\n\r\n    const handleonChange = (event) => {\r\n        // console.log(\"onChange Fired\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [Text, setText] = useState(\"\")\r\n    return (\r\n        <>\r\n            <div>\r\n\r\n                <div className=\"mb-3\" style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n                    <h1 className=\"mb-4\">{props.heading}</h1>\r\n                    <textarea id=\"Box\"  className=\"form-control\" value={Text} onChange={handleonChange} rows=\"10\" style={{ backgroundColor: props.mode === \"dark\" ? \"#343a40\" : \"white\", color: props.mode === \"dark\" ? \"white\" : \"black\" }}></textarea>\r\n                </div>\r\n                <button disabled={Text.length === 0} type=\"button \" onClick={handleonClick} className={`btn btn-${props.mode === \"light\" ? \"dark\" : \"light\"} mx-1 my-2`} >Change into UpperCase</button>\r\n                <button disabled={Text.length === 0} type=\"button \" onClick={handleLoClick} className={`btn btn-${props.mode === \"light\" ? \"dark\" : \"light\"} mx-1 my-2`} >Change into LowerCase</button>\r\n                <button disabled={Text.length === 0} className={`btn btn-${props.mode === \"light\" ? \"dark\" : \"light\"} mx-1 my-2`} onClick={handleTitleCase}>TitleCase</button>\r\n                <button disabled={Text.length === 0} className={`btn btn-${props.mode === \"light\" ? \"dark\" : \"light\"} mx-1 my-2`} onClick={handleCopy}>Copy Text </button>\r\n                <button disabled={Text.length === 0} className={`btn btn-${props.mode === \"light\" ? \"dark\" : \"light\"} mx-1 my-2`} onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n                <button disabled={Text.length === 0} className={`btn btn-${props.mode === \"light\" ? \"dark\" : \"light\"} mx-1 my-2`} onClick={handleClear} >Clear Text</button>\r\n\r\n            </div>\r\n            <div className=\"container my-4\" style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n                <h2>Summary</h2>\r\n                <p>{Text.split(\" \").filter((element) => { return element.length !== 0 }).length} <strong>Total Words</strong> </p>\r\n                <p>{Text.replace(/\\s+/g, \"\").length} <strong>Total Characters</strong></p>\r\n                <p>{0.008 * Text.split(\" \").filter((element) => { return element.length !== 0 }).length} <strong>Minute read</strong> </p>\r\n                <h2>Preview</h2>\r\n                <p>{Text.length > 0 ? Text : \"Nothing to preview\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const Alert = (props) => {\r\n     \r\n    const Capitalize=(word)=>{\r\n         \r\n        let str= word.toLowerCase();\r\n        return str.charAt(0).toUpperCase() +str.slice(1);\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{height:\"50px\"}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{Capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div> }\r\n\r\n            </div>\r\n            \r\n    )\r\n}\r\n","import { Navbar } from './Components/Navbar';\nimport { TextForm } from './Components/TextForm';\nimport React, { useState } from 'react'\nimport { Alert } from './Components/Alert';\n\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert(\n      {\n        msg: message,\n        type: type\n      }\n    )\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const changeMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark mode has been Enabled\",\"success\");\n     \n    }\n    else {\n      setMode(\"light\")\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been Enabled\",\"success\");\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"Textutils\" home=\"Home\" mode={mode} changeMode={changeMode} alert={alert} showAlert={showAlert}/>\n      <Alert alert={alert} showAlert={showAlert}/>\n      <div className=\"container my-3\" >\n\n        <TextForm heading=\"TextUtils - Word counter,Character counter,Convert Text into UpperCase,LowerCase and TitleCase\" mode={mode} alert={alert} showAlert={showAlert} />\n\n      </div>\n\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}