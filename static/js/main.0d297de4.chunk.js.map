{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","onClick","changeMode","forhtml","defaultProps","TextForm","useState","Text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","textChange","toUpperCase","toLowerCase","words","split","i","length","charAt","slice","join","copy","document","getElementById","select","navigator","clipboard","writeText","rmSpace","replace","App","setMode","home","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0d297de4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const Navbar = (props) => {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                            </li>\r\n                           \r\n                        </ul>\r\n\r\n                        <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                        </form>\r\n                        <div className={`form-check form-switch mx-5 text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}  >\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.changeMode} />\r\n                            <label className=\"form-check-label\" forhtml=\"flexSwitchCheckDefault\">{props.mode === \"light\" ? \"Enable Dark Mode\" : \"Enable Light Mode\"}</label>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"My app\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\n\r\nexport const TextForm = (props) => {\r\n\r\n    const handleonClick = () => {\r\n        // console.log(\"clicked\");\r\n        let textChange = Text.toUpperCase();\r\n        setText(textChange);\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        // console.log(\"clicked\");\r\n        let textChange = Text.toLowerCase();\r\n        setText(textChange);\r\n    }\r\n\r\n\r\n    const handleClear = () => {\r\n        let changes = \"\";\r\n        setText(changes);\r\n    }\r\n    const handleTitleCase = () => {\r\n\r\n        const words = Text.toLowerCase().split(\" \");\r\n        for (let i = 0; i < words.length; i++) {\r\n            words[i] = words[i].charAt(0).toUpperCase() + words[i].slice(1);\r\n\r\n        }\r\n        return setText(words.join(' '))\r\n    }\r\n\r\n\r\n    const handleCopy = () => {\r\n        let copy = document.getElementById(\"box\")\r\n        copy.select();\r\n        navigator.clipboard.writeText(copy.value);\r\n\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let rmSpace = Text.replace(/\\s+/g, \" \")\r\n        setText(rmSpace);\r\n\r\n    }\r\n\r\n\r\n    const handleonChange = (event) => {\r\n        // console.log(\"onChange Fired\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [Text, setText] = useState(\"\")\r\n    return (\r\n        <>\r\n            <div>\r\n\r\n                <div className=\"mb-3\" style={{color : props.mode===\"dark\"? \"white\" : \"black\"}}>\r\n                    <h1>{props.heading}</h1>\r\n                    <textarea className=\"form-control\" value={Text} onChange={handleonChange} id=\"box\" rows=\"10\" style={{backgroundColor : props.mode===\"dark\"? \"#343a40\" : \"white\" ,color : props.mode===\"dark\"? \"white\" : \"black\"}}></textarea>\r\n                </div>\r\n                <button type=\"button \" onClick={handleonClick} className={`btn btn-${props.mode===\"light\"? \"dark\" :\"light\"} mx-1 my-2`} >Change into UpperCase</button>\r\n                <button type=\"button \" onClick={handleLoClick} className={`btn btn-${props.mode===\"light\"? \"dark\" :\"light\"} mx-1 my-2`} >Change into LowerCase</button>\r\n                <button className={`btn btn-${props.mode===\"light\"? \"dark\" :\"light\"} mx-1 my-2`} onClick={handleTitleCase}>TitleCase</button>\r\n                <button className={`btn btn-${props.mode===\"light\"? \"dark\" :\"light\"} mx-1 my-2`}  onClick={handleCopy}>Copy Text </button>\r\n                <button className={`btn btn-${props.mode===\"light\"? \"dark\" :\"light\"} mx-1 my-2`}  onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n                <button className={`btn btn-${props.mode===\"light\"? \"dark\" :\"light\"} mx-1 my-2`}  onClick={handleClear} >Clear Text</button>\r\n\r\n            </div>\r\n            <div className=\"container my-4\" style={{color : props.mode===\"dark\"? \"white\" : \"black\"}}>\r\n                <h2>Summary</h2>\r\n                <p>Total Words  {Text.split(\" \").length} </p>\r\n                <p> Total Characters  {Text.length}</p>\r\n                <p>{0.008 * Text.length} mins to read the text</p>\r\n                <h2>Preview</h2>\r\n                <p>{Text.length > 0 ? Text :\"Write something above for preview\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Navbar } from './Components/Navbar';\nimport { TextForm } from './Components/TextForm';\nimport React, { useState } from 'react'\n\n\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const changeMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = \"black\";\n    }\n    else {\n      setMode(\"light\")\n      document.body.style.backgroundColor = \"white\";\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"Textutils\" home=\"Home\" mode={mode} changeMode={changeMode} />\n      <div className=\"container my-3\" >\n\n        <TextForm heading=\"Enter the text for Analysis\" mode={mode} />\n\n      </div>\n\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}